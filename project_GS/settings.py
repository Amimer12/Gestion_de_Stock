# Optimized settings.py for Neon free tier
"""
Django settings for project_GS project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Secret & Debug - moved up for better organization
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-729n^)#+pr_&u!%m_z&y(*pz@ay0bd#2yj5!(y!idv9^mc)p__')
DEBUG = os.environ.get('DEBUG', 'True') != 'False'

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'jazzmin', 
    'Products',
    'Orders',
    'Gestionnaires',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Moved up for better static file serving
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project_GS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_GS.wsgi.application'

# Database - Optimized for Neon free tier
DATABASES = {
    'default': dj_database_url.config(
        default='postgresql://neondb_owner:npg_NGSnu8Rq1HQr@ep-spring-rain-a85etcwt-pooler.eastus2.azure.neon.tech/neondb?sslmode=require',
        conn_max_age=300, 
        ssl_require=True,
    )
}

# Enhanced caching configuration
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
        'TIMEOUT': 300,  # 5 minutes default timeout
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
            'CULL_FREQUENCY': 3,
        }
    }
}

# Session optimization - use database sessions with caching
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
SESSION_CACHE_ALIAS = 'default'
SESSION_COOKIE_AGE = 86400  # 24 hours

# Database query optimization
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging configuration to monitor slow queries
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {
            'level': 'WARNING',  # Set to DEBUG to see all queries
            'handlers': ['console'],
        },
    },
}

# Static files optimization
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Jazzmin optimizations
JAZZMIN_UI_TWEAKS = {
    "theme": "flatly",
}

JAZZMIN_SETTINGS = {
    "site_title": "Gestion de stock",
    "site_header": "Gestion de stock",
    "search_model": [],  # Keep empty to reduce admin overhead
    "user_avatar": None,
    
    # Minimize top menu for better performance
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
    ],
    
    "usermenu_links": [
        {"model": "auth.user"}
    ],
    
    "show_sidebar": True,
    "navigation_expanded": False,  # Changed to False to reduce initial load
    "hide_apps": [],
    "order_with_respect_to": ["auth"],
    
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "Products.Produit": "fas fa-box",
        "Products.Couleur": "fas fa-palette",
        "Products.Taille": "fas fa-ruler-combined",
        "Products.Variant": "fas fa-cubes",
        "Products.Boutique": "fas fa-store-alt",
        "Orders.Commande": "fas fa-shopping-cart",
        "Gestionnaires.Gestionnaire": "fas fa-user-tie",
    },
    
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    "related_modal_active": False,
    "show_ui_builder": False,
    "custom_css": None,
    "custom_js": None,
    "use_google_fonts_cdn": False,  # Changed to False to reduce external requests
    "changeform_format": "single",  # Simplified form format
    "changeform_format_overrides": {
        "auth.user": "single", 
        "auth.group": "single"
    },
}

# Superuser creation (optimized)
from django.contrib.auth import get_user_model

if os.environ.get("DJANGO_SUPERUSER_USERNAME") and os.environ.get("RUN_MAIN"):
    User = get_user_model()
    if not User.objects.filter(username=os.environ["DJANGO_SUPERUSER_USERNAME"]).exists():
        User.objects.create_superuser(
            username=os.environ["DJANGO_SUPERUSER_USERNAME"],
            email=os.environ["DJANGO_SUPERUSER_EMAIL"],
            password=os.environ["DJANGO_SUPERUSER_PASSWORD"]
        )

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True